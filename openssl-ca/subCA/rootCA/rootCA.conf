#
# Basic CA Info: man ca
#
[default]
name              = rootCA_david
domain_suffix     = example.com
aia_url           = http://$name.$domain_suffix/$name.crt
crl_url           = http://$name.$domain_suffix/$name.crt
ocsp_url          = http://ocsp.$name.$domain_suffix:9080
default_ca        = ca_default
name_opt          = utf8, esc_ctrl, multiline, lname, align

[ca_dn]
countryName          = "US"
organizationName     = "Example"
stateOrProvinceName  = "California" 
commonName           = "Root CA David Li"

#
# CA operations: man ca
#
[ca_default]
home              = .
database          = $home/db/index
serial            = $home/db/serial
crlnumber         = $home/db/crlnumber
certificate       = $home/$name.crt
private_key       = $home/private/$name.priKey
RANDFILE          = $home/private/random
new_certs_dir     = $home/certs
unique_subject    = no
copy_extensions   = none
default_days      = 3650
default_crl_days  = 365
default_md        = sha256
policy            = policy_c_o_match

#
# Note: one can only say policy words like match, supplied or optional here, don't be specific
# if say 'supplied' most likely the specific name string has to be in [ca_dn] section
#
[policy_c_o_match]
countryName          = match
stateOrProvinceName  = supplied 
organizationName     = match
organizationalUnitName = optional
commonName           = supplied 
emailAddress         = optional

#
# Req for creating self-signed CA: man req
#
[req]
default_bits        = 4096
encrypt_key         = no
default_md          = sha256
utf8                = yes
string_mask         = utf8only
prompt              = no
distinguished_name  = ca_dn
req_extenstions     = ca_ext

[ca_ext]
basicConstraints   = critical, CA:true
keyUsage           = critical, keyCertSign, cRLSign
subjectKeyIdentifier = hash

#
# Certs creation 
#
[sub_ca_ext]
authorityInfoAccess    = @issuer_info
authorityKeyIdentifier = keyid:always
basicConstraints       = critical, CA:true, pathlen:0
crlDistributionPoints  = @crl_info
extendedKeyUsage       = clientAuth, serverAuth
keyUsage               = critical, keyCertSign, cRLSign
nameConstraints        = @name_constraints
subjectKeyIdentifier   = hash

[crl_info]
URI.0  = $crl_url

[issuer_info]
caIssuers;URI.0      = $aia_url
OCSP;URI.0           = $ocsp_url

[name_constraints]
permitted;DNS.0 = example.com

#
# OCSP responder
# 
[ocsp_ext]
authorityKeyIdentifier    = keyid:always
basicConstraints          = critical, CA:false
extendedKeyUsage          = OCSPSigning
keyUsage                  = critical, digitalSignature
subjectKeyIdentifier      = hash


